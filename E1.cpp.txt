/*
🔘PROBLEM STATEMENT:-
Read the marks obtained by students of second year in an online
examination of a particular subject. Find out maximum and minimum marks
obtained in that subject using heap data structure. Analyze the algorithm.
*/

/*
#️⃣Quick Revision Notes:-

🔸 HEAP DATA STRUCTURE:
- A complete binary tree used to implement priority queues.
- Types:
  1. Min Heap: Root is smaller than children → gives MIN element at root.
  2. Max Heap: Root is larger than children → gives MAX element at root.
*/

#include <iostream>
using namespace std;

// Function to maintain Min-Heap property
void MinHeap(int arr[], int i) {
    int parent = (i - 1) / 2;
    int current = i;

    // Bubble up the current element until heap property is restored
    while (parent >= 0 && arr[parent] > arr[current]) {
        swap(arr[parent], arr[current]);
        current = parent;
        parent = (current - 1) / 2;
    }
}

// Function to maintain Max-Heap property
void MaxHeap(int arr[], int i) {
    int parent = (i - 1) / 2;
    int current = i;

    // Bubble up the current element until heap property is restored
    while (parent >= 0 && arr[parent] < arr[current]) {
        swap(arr[parent], arr[current]);
        current = parent;
        parent = (current - 1) / 2;
    }
}

int main() {
    int n;
    cout << "Enter number of students: ";
    cin >> n;

    if (n <= 0) {
        cout << "Invalid number of students." << endl;
        return 1;
    }

    int arr[n];
    cout << "Enter DSA marks of " << n << " students: " << endl;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Create Min Heap from input array
    for (int i = 1; i < n; i++) {
        MinHeap(arr, i);
    }
    cout << "------------------------------" << endl;
    cout << "Minimum Score: " << arr[0] << endl;

    // Create Max Heap from input array
    for (int i = 1; i < n; i++) {
        MaxHeap(arr, i);
    }
    cout << "------------------------------" << endl;
    cout << "Maximum Score: " << arr[0] << endl;

    return 0;
}
